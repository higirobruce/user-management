version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: user_management_db
    restart: always
    environment:
      POSTGRES_DB: user_management
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - user_management_network

  # NestJS Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: user_management_app
    restart: always
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=password
      - DB_NAME=user_management
      - JWT_SECRET=your-super-secret-jwt-key-change-this-in-production
      - JWT_REFRESH_SECRET=your-super-secret-refresh-key-change-this-in-production
      - PORT=3000
    depends_on:
      - postgres
    networks:
      - user_management_network
    # volumes:
    #   - ./:/app
    #   - /app/node_modules

  # pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4
    container_name: user_management_pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8080:80"
    depends_on:
      - postgres
    networks:
      - user_management_network

volumes:
  postgres_data:

networks:
  user_management_network:
    driver: bridge